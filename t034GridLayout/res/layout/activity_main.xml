<!--GridLayout : API 14레벨에서 추가된 클래스   -->
<!-- GridLayout의 장점   -->
<!-- 1. 화면배치를 위한 레이아웃의 중첩을 줄일수 있다 .
	 2. rowSpan 을 이용해서 행을 병합할수 있다 . 
	 GridLayout의 단점 
	 1. TableLayout의  stretch 처럼 여백의 관리를 할수 없다 . 
	 2. TableLayout의  shrink 처럼 특정 칸을 줄여서 표현 할 수가 없다. 
	 3. TableLayout의 collapse 처럼 특정 열을 숨길 수 없다 .
 -->
<GridLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" 
    android:rowCount="4"
    android:columnCount="3"
    android:orientation="vertical"
    android:useDefaultMargins="true">
    <!--useuseDefaultMargins 마진을 줄것인가 8dp로 자동으로 지정   -->
    <!--자식들이 추가 되는 방향을 지정  orientation :   -->
    
    <Button  android:text="1"/>
    <Button  android:text="2"/>
    <Button  android:text="3"/>
    <Button  android:text="4"/>
    <Button  android:text="5"
        android:layout_column="1"
        android:layout_row="2"/>
    <Button  android:text="6"
        android:layout_column="1"
        android:layout_row="1"/>
    <Button  android:text="7"/>
    <Button  android:text="8"
        android:layout_gravity="fill_vertical"
        
        android:layout_rowSpan="3"/>
    <!--layout_rowSpan 8 버튼에 영역에 3칸 병합   -->
    <!--layout_gravity=fill_vertical 부모에 대해서 꽉 수직으로 채우겠다.  -->
    <Button  android:text="9"/>

    <Space
        android:layout_column="1"
        android:layout_gravity="left|top"
        android:layout_row="0" />
    
</GridLayout>